[
  {
    "Id": 0,
    "Title": "C# Nədir?",
    "PublisDate": "11/09/2024",
    "Category": "C#",
    "Image": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/csharp/csharp-original.svg",
    "Description": "C# (C sharp), Microsoft tərəfindən inkişaf etdirilmiş bir proqramlaşdırma dilidir. Bu dil, geniş məqsədlər üçün istifadə olunur və əsasən masaüstü proqramları, veb tətbiqləri, mobil proqramlar və oyunlar hazırlamaq üçün istifadə edilir. C# obyekt yönümlü bir dildir, yəni obyektlər və siniflər üzərində işləməyi asanlaşdırır.<br><br><b>C# dilinin əsas xüsusiyyətləri:</b><br>1.Sadə və güclü: C# istifadəsi asan və güclü xüsusiyyətlərə malikdir.<br>2.OOP (Object Oriented Programming): Obyekt yönümlü proqramlaşdırma yanaşması, kodun təkrar istifadəsini və daha asan idarə olunmasını təmin edir.<br>3.Platformlararası dəstək: C# .NET Framework və .NET Core ilə işləyir, bu da müxtəlif əməliyyat sistemlərində proqramlar yaratmağa imkan verir.<br>4.Yüksək performanslıdır: C# dilində yazılan tətbiqlər yüksək performanslı olur.<br><br>Bu dil həm də təhlükəsiz proqram yazmaq üçün güclü tip təhlükəsizliyi ilə təmin edilmişdir.",
    "Code": "Console.WriteLine(\"Hello World!\");",
    "CodeDescription": ""
  },
  {
    "Id": 1,
    "Title": "ASP.NET Nədir?",
    "PublisDate": "13/09/2024",
    "Category": ".Net Core",
    "Image": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/dotnetcore/dotnetcore-original.svg",
    "Description": "ASP.NET, Microsoft tərəfindən inkişaf etdirilən bir Frameworkdur. ASP.NET istifadəçilərə dinamik web saytlar, web tətbiqləri və web xidmətləri yaratmaq imkanı verir. Bu framework C#, VB.NET kimi proqramlaşdırma dilləri ilə işləyir və geniş funksionallığı ilə tanınır.<br><br><b>ASP.NET</b>, \"Active Server Pages\" (Aktiv Server Səhifələri) mənasını verir və onun .NET versiyasıdır. Bu Framework web tətbiqlərinin sürətli və etibarlı şəkildə yaradılması üçün nəzərdə tutulmuşdur və server tərəfində işləyən texnologiyadır. ASP.NET, MVC (Model-View-Controller) və Web Forms kimi fərqli design modelləri dəstəkləyir.<br><br>Üstünlükləri arasında asan təkmilləşdirilmə, təhlükəsizlik xüsusiyyətləri mövcuddur.",
    "Code": "",
    "CodeDescription": ""
  },
  {
    "Id": 2,
    "Title": "Data Types",
    "PublisDate": "13/09/2024",
    "Category": "C#",
    "Image": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/csharp/csharp-original.svg",
    "Description": "C# dilində müxtəlif data (məlumat) tipləri mövcuddur və hər birinin müəyyən bir ölçüsü (sahəsi) vardır. Aşağıda C# dilindəki əsas data tipləri və onların ölçüləri barədə məlumat verilmişdir:<br> <br><b>Data Types</b><br>1.<b>byte</b>: 0-dan 255-ə qədər olan tam ədədləri saxlayır. Həcmi 1 baytdır (8 bit).<br>2.<b>sbyte</b>: -128-dən 127-yə qədər olan tam ədədləri saxlayır. Həcmi 1 baytdır (8 bit).<br>3.<b>short</b>: -32,768-dən 32,767-yə qədər olan tam ədədləri saxlayır. Həcmi 2 baytdır (16 bit).<br>4.<b>ushort</b>: 0-dan 65,535-ə qədər olan tam ədədləri saxlayır. Həcmi 2 baytdır (16 bit).<br>5.<b>int</b>: -2,147,483,648-dən 2,147,483,647-yə qədər olan tam ədədləri saxlayır. Həcmi 4 baytdır (32 bit).<br>6.<b>uint</b>: 0-dan 4,294,967,295-ə qədər olan tam ədədləri saxlayır. Həcmi 4 baytdır (32 bit).<br>7.<b>long</b>: -9,223,372,036,854,775,808-dən 9,223,372,036,854,775,807-yə qədər olan tam ədədləri saxlayır. Həcmi 8 baytdır (64 bit).<br>8.<b>ulong</b>: 0-dan 18,446,744,073,709,551,615-ə qədər olan tam ədədləri saxlayır. Həcmi 8 baytdır (64 bit).<br>9.<b>float</b>: Təxmini 1.5 × 10^−45-dən 3.4 × 10^38-ə qədər olan üzvi ədədləri saxlayır. Həcmi 4 baytdır (32 bit).<br>10.<b>double</b>: Təxmini 5.0 × 10^−324-dən 1.7 × 10^308-ə qədər olan üzvi ədədləri saxlayır. Həcmi 8 baytdır (64 bit).<br>11.<b>decimal</b>: Yüksək dəqiqliklə 1.0 × 10^−28-dən 7.9 × 10^28-ə qədər olan ədədləri saxlayır.Həm tam həm də kəsr ədəd saxlayır.Həcmi 16 baytdır (128 bit).<br>12.<b>char</b>: Unicode xarakterlərini saxlamaq üçün istifadə olunur. Həcmi 2 baytdır (16 bit).<br>13.<b>string</b>: Mətn məlumatlarını saxlayır. String-lərin Həcmi, tərkibindəki xarakterlərin sayına və hər bir xarakterin Unicode kodlama tərzinə bağlıdır.<br>14.<b>bool</b>: Doğru (true) və ya yanlış (false) dəyərlərini saxlayır. Həcmi adətən 1 baytdır, amma bu dilə və platformaya görə dəyişə bilər.<br> <br>Bu məlumat tipləri, C# dilində proqram yazarkən müxtəlif növ məlumatları saxlamaq və işləmək üçün istifadə olunur. Hər bir tipin öz spesifik həcmi və saxladığı dəyərlərin aralığı vardır.<br>",
    "Code": "int a = 100; // 4 bayt\nfloat b = 3.14f; // 4 bayt\ndouble c = 3.14159265358979; // 8 bayt\nchar d = 'A'; // 2 bayt\nbool e = true; // 1 bayt\nbyte f = 255; // 1 bayt\nshort g = 32767; // 2 bayt\nlong h = 9223372036854775807L; // 8 bayt",
    "CodeDescription": ""
  },
  {
    "Id": 3,
    "Title": "Access Modifiers",
    "PublisDate": "13/09/2024",
    "Category": "C#",
    "Image": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/csharp/csharp-original.svg",
    "Description": "C# dilində siniflərin metodlarının və dəyişənlərinin əlçatanlıq səviyyəsini təyin etmək üçün <b>access modifiers</b> (giriş modifikatorları) istifadə olunur.<br> <br><b>Access Modifierlərin 4 əsas növü mövcuddur:</b><br>1.<b>public</b>: hər yerə əlçatandır<br>2.<b>private</b>: yalnız yaradıldığı sinif daxilində əlçatandır<br>3.<b>protected</b>: yalnız yaradıldığı sinif və ondan törəyən siniflər üçün əlçatandır<br>4.<b>internal</b>: yalnız eyni Assembly-də əlçatandır<br> <br><b>Köməkçi növlər:</b><br>1.<b>protected internal</b>: eyni Assembly-də və ya törəyən siniflər üçün əlçatandır<br>2.<b>private protected</b>: yalnız eyni Assembly daxilindəki törəyən siniflər üçün əlçatandır<br>",
    "Code": "using System;\\npublic class Example\\n{\\n    // public: Hər yerdən əlçatandır\\n    public int PublicValue = 1;\\n    // private: Yalnız bu sinif daxilində əlçatandır\\n    private int PrivateValue = 2;\\n    // protected: Yalnız bu sinif və ondan törəyən siniflər üçün əlçatandır\\n    protected int ProtectedValue = 3;\\n    // internal: Yalnız eyni Assembly-də əlçatandır\\n    internal int InternalValue = 4;\\n    // protected internal: Eyni Assembly-də və ya törəyən siniflər üçün əlçatandır\\n    protected internal int ProtectedInternalValue = 5;\\n    // private protected: Yalnız eyni Assembly daxilindəki törəyən siniflər üçün əlçatandır\\n    private protected int PrivateProtectedValue = 6;\\n    public void DisplayValues()\\n    {\\n        Console.WriteLine($\"PublicValue: {PublicValue}\");\\n        Console.WriteLine($\"PrivateValue: {PrivateValue}\"); // Bu yalnız bu sinifdə görünür\\n        Console.WriteLine($\"ProtectedValue: {ProtectedValue}\");\\n        Console.WriteLine($\"InternalValue: {InternalValue}\");\\n        Console.WriteLine($\"ProtectedInternalValue: {ProtectedInternalValue}\");\\n        Console.WriteLine($\"PrivateProtectedValue: {PrivateProtectedValue}\");\\n    }\\n}\\n",
    "CodeDescription": "Bu kod parçası müxtəlif giriş modifikatorlarını və onların təsirini nümayiş etdirir. <b>DisplayValues</b> metodu hər bir modifikatorun sinif daxilində necə işlədiyini göstərir. "
  }
]